#!/bin/bash
#
# ~/.pdxjohnnyrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# History config
unset HISTFILESIZE
export HISTSIZE=1000000
export HISTFILESIZE=1000000
shopt -s histappend
export PROMPT_COMMAND='history -a'
export HISTCONTROL=ignoredups

# Fixes font issues
export XDG_CONFIG_HOME="${HOME}/.config"

# Prompt config
# export PS1='[\u@\h \W]\$ '
export PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]\$ '

# Grep colors
alias grep='grep --color=auto'
alias ag='grep --color=always -Hrn'

# Make and valgrind through less
makel () {
    make "$@" 2>&1 | less -r
}
valgrindl () {
    valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes "$@" \
        2>&1 | less -r
}
# Anything throgh less
lessit () {
    "$@" 2>&1 | less -r
}

alias ssh_proxy="ssh -nNT -D 9050"

# Add ll
alias ls='ls --color=auto'
alias ll='ls -lAF'
function lll () {
  ls --color=always -lAF $@ | less -r
}

# VPN like proxy through ssh
alias vpn="sshuttle --dns -r $VPN_SERVER 0/0"

# Lynx config
export WWW_HOME="https://google.com"
alias lynx="lynx -accept_all_cookies -cookie_file=$HOME/.lynx_cookies"

# GPG password in terminal
export GPG_TTY=$(tty)

# Go config
export GOPATH="${HOME}/Documents/go"
export GOBIN="${GOPATH}/bin"
alias goh="cd ${GOPATH}/src/github.com/pdxjohnny"
if [ -d $GOBIN ]; then
  export PATH="$PATH:$GOBIN"
fi

# Term broadcast
gottyb () {
    gotty tmux attach -t `tmux display -p '0'`
}

# Virtualenv
venv () {
  __venv="$HOME/Documents/python/.venv"
  if [ ! -f "$__venv/bin/activate" ]; then
    mkdir -p "$HOME/Documents/python"
    virtualenv -p python3 "$__venv"
  fi
  source "$__venv/bin/activate"
}

# Tensorflow Virtualenv
tf () {
  if [ ! -f "$HOME/.tensorflow/bin/activate" ]; then
    virtualenv --system-site-packages -p python3 "$HOME/.tensorflow"
    source "$HOME/.tensorflow/bin/activate"
    pip install --upgrade tensorflow
  else
    source "$HOME/.tensorflow/bin/activate"
  fi
}

# IPython Notebook
notebook () {
  venv
  if [ ! -d "$HOME/Documents/python/notebook" ]; then
    mkdir -p "$HOME/Documents/python/notebook"
  fi
  cd "$HOME/Documents/python/notebook"
  jupyter notebook
}

# Android config
export ANDROID_HOME="${HOME}/Android/Sdk"

# For clang-format
alias clang-format="clang-format -i -style=llvm"

# Add to path
ADD_PATH=("${HOME}/.local/bin" "${GOPATH}/bin" "${ANDROID_HOME}/platform-tools")
for CURR in ${ADD_PATH[@]}; do
    if [ -d $CURR ]; then
        export PATH="$PATH:$CURR"
    fi
done

# Source all the files that need to be sourced
for file in $(ls -a ${HOME} | grep '_source'); do
    source "${HOME}/$file"
done
